//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/ValidatorUtil.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ValidatorUtil.h"
#include "java/lang/Integer.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface AppBaseValidatorUtil ()

+ (jint)calcularDigitoWithNSString:(NSString *)str
                      withIntArray:(IOSIntArray *)peso;

@end

inline IOSIntArray *AppBaseValidatorUtil_get_pesoCPF(void);
static IOSIntArray *AppBaseValidatorUtil_pesoCPF;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AppBaseValidatorUtil, pesoCPF, IOSIntArray *)

inline IOSIntArray *AppBaseValidatorUtil_get_pesoCNPJ(void);
static IOSIntArray *AppBaseValidatorUtil_pesoCNPJ;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AppBaseValidatorUtil, pesoCNPJ, IOSIntArray *)

inline NSString *AppBaseValidatorUtil_get_EMAIL_REGEX(void);
static NSString *AppBaseValidatorUtil_EMAIL_REGEX = @"^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(AppBaseValidatorUtil, EMAIL_REGEX, NSString *)

__attribute__((unused)) static jint AppBaseValidatorUtil_calcularDigitoWithNSString_withIntArray_(NSString *str, IOSIntArray *peso);

J2OBJC_INITIALIZED_DEFN(AppBaseValidatorUtil)

@implementation AppBaseValidatorUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AppBaseValidatorUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)calcularDigitoWithNSString:(NSString *)str
                      withIntArray:(IOSIntArray *)peso {
  return AppBaseValidatorUtil_calcularDigitoWithNSString_withIntArray_(str, peso);
}

+ (jboolean)isValidCPFWithNSString:(NSString *)cpf {
  return AppBaseValidatorUtil_isValidCPFWithNSString_(cpf);
}

+ (jboolean)isValidCNPJWithNSString:(NSString *)cnpj {
  return AppBaseValidatorUtil_isValidCNPJWithNSString_(cnpj);
}

+ (jboolean)isValidEmailWithNSString:(NSString *)email {
  return AppBaseValidatorUtil_isValidEmailWithNSString_(email);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(calcularDigitoWithNSString:withIntArray:);
  methods[2].selector = @selector(isValidCPFWithNSString:);
  methods[3].selector = @selector(isValidCNPJWithNSString:);
  methods[4].selector = @selector(isValidEmailWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pesoCPF", "[I", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "pesoCNPJ", "[I", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "EMAIL_REGEX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "calcularDigito", "LNSString;[I", "isValidCPF", "LNSString;", "isValidCNPJ", "isValidEmail", &AppBaseValidatorUtil_pesoCPF, &AppBaseValidatorUtil_pesoCNPJ, &AppBaseValidatorUtil_EMAIL_REGEX };
  static const J2ObjcClassInfo _AppBaseValidatorUtil = { "ValidatorUtil", "br.com.mobilemind.j2objc.util", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_AppBaseValidatorUtil;
}

+ (void)initialize {
  if (self == [AppBaseValidatorUtil class]) {
    AppBaseValidatorUtil_pesoCPF = [IOSIntArray newArrayWithInts:(jint[]){ 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 } count:10];
    AppBaseValidatorUtil_pesoCNPJ = [IOSIntArray newArrayWithInts:(jint[]){ 6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2 } count:13];
    J2OBJC_SET_INITIALIZED(AppBaseValidatorUtil)
  }
}

@end

void AppBaseValidatorUtil_init(AppBaseValidatorUtil *self) {
  NSObject_init(self);
}

AppBaseValidatorUtil *new_AppBaseValidatorUtil_init() {
  J2OBJC_NEW_IMPL(AppBaseValidatorUtil, init)
}

AppBaseValidatorUtil *create_AppBaseValidatorUtil_init() {
  J2OBJC_CREATE_IMPL(AppBaseValidatorUtil, init)
}

jint AppBaseValidatorUtil_calcularDigitoWithNSString_withIntArray_(NSString *str, IOSIntArray *peso) {
  AppBaseValidatorUtil_initialize();
  jint soma = 0;
  for (jint indice = [((NSString *) nil_chk(str)) java_length] - 1, digito; indice >= 0; indice--) {
    digito = JavaLangInteger_parseIntWithNSString_([str java_substring:indice endIndex:indice + 1]);
    soma += digito * IOSIntArray_Get(peso, ((IOSIntArray *) nil_chk(peso))->size_ - [str java_length] + indice);
  }
  soma = 11 - soma % 11;
  return soma > 9 ? 0 : soma;
}

jboolean AppBaseValidatorUtil_isValidCPFWithNSString_(NSString *cpf) {
  AppBaseValidatorUtil_initialize();
  if ((cpf == nil) || ([((NSString *) nil_chk(cpf)) java_length] != 11)) {
    return false;
  }
  JavaLangInteger *digito1 = JavaLangInteger_valueOfWithInt_(AppBaseValidatorUtil_calcularDigitoWithNSString_withIntArray_([((NSString *) nil_chk(cpf)) java_substring:0 endIndex:9], AppBaseValidatorUtil_pesoCPF));
  JavaLangInteger *digito2 = JavaLangInteger_valueOfWithInt_(AppBaseValidatorUtil_calcularDigitoWithNSString_withIntArray_(JreStrcat("$@", [cpf java_substring:0 endIndex:9], digito1), AppBaseValidatorUtil_pesoCPF));
  return [cpf isEqual:JreStrcat("$$$", [cpf java_substring:0 endIndex:9], [digito1 description], [digito2 description])];
}

jboolean AppBaseValidatorUtil_isValidCNPJWithNSString_(NSString *cnpj) {
  AppBaseValidatorUtil_initialize();
  if ((cnpj == nil) || ([((NSString *) nil_chk(cnpj)) java_length] != 14)) {
    return false;
  }
  JavaLangInteger *digito1 = JavaLangInteger_valueOfWithInt_(AppBaseValidatorUtil_calcularDigitoWithNSString_withIntArray_([((NSString *) nil_chk(cnpj)) java_substring:0 endIndex:12], AppBaseValidatorUtil_pesoCNPJ));
  JavaLangInteger *digito2 = JavaLangInteger_valueOfWithInt_(AppBaseValidatorUtil_calcularDigitoWithNSString_withIntArray_(JreStrcat("$@", [cnpj java_substring:0 endIndex:12], digito1), AppBaseValidatorUtil_pesoCNPJ));
  return [cnpj isEqual:JreStrcat("$$$", [cnpj java_substring:0 endIndex:12], [digito1 description], [digito2 description])];
}

jboolean AppBaseValidatorUtil_isValidEmailWithNSString_(NSString *email) {
  AppBaseValidatorUtil_initialize();
  JavaUtilRegexPattern *p = JavaUtilRegexPattern_compileWithNSString_(AppBaseValidatorUtil_EMAIL_REGEX);
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(p)) matcherWithJavaLangCharSequence:email];
  return [((JavaUtilRegexMatcher *) nil_chk(m)) matches];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AppBaseValidatorUtil)
