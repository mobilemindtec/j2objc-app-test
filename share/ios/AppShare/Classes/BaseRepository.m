//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/BaseRepository.java
//

#include "AppDatabase.h"
#include "BaseRepository.h"
#include "Criterion.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Property.h"
#include "Query.h"
#include "SquidCursor.h"
#include "Table.h"
#include "TableModel.h"
#include "java/lang/Long.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"

@interface AppBaseRepository () {
 @public
  IOSClass *clazz_;
  IOSObjectArray *properties_;
  ComYahooSquidbSqlTable *table_;
  ComYahooSquidbSqlProperty *idProperty_;
}

@end

J2OBJC_FIELD_SETTER(AppBaseRepository, clazz_, IOSClass *)
J2OBJC_FIELD_SETTER(AppBaseRepository, properties_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(AppBaseRepository, table_, ComYahooSquidbSqlTable *)
J2OBJC_FIELD_SETTER(AppBaseRepository, idProperty_, ComYahooSquidbSqlProperty *)

@implementation AppBaseRepository

- (instancetype)initWithIOSClass:(IOSClass *)clazz
      withComYahooSquidbSqlTable:(ComYahooSquidbSqlTable *)table
withComYahooSquidbSqlPropertyArray:(IOSObjectArray *)properties
   withComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)idProperty {
  AppBaseRepository_initWithIOSClass_withComYahooSquidbSqlTable_withComYahooSquidbSqlPropertyArray_withComYahooSquidbSqlProperty_(self, clazz, table, properties, idProperty);
  return self;
}

- (void)saveWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)entity {
  [((SGDBAppDatabase *) nil_chk(database_)) persistWithComYahooSquidbDataTableModel:entity];
}

- (jboolean)delete__WithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)entity {
  return [((SGDBAppDatabase *) nil_chk(database_)) delete__WithIOSClass:clazz_ withLong:[((ComYahooSquidbDataTableModel *) nil_chk(entity)) getRowId]];
}

- (jint)deleteAll {
  return [((SGDBAppDatabase *) nil_chk(database_)) deleteAllWithIOSClass:clazz_];
}

- (ComYahooSquidbDataTableModel *)findByIdWithLong:(jlong)id_ {
  ComYahooSquidbSqlQuery *query = [((ComYahooSquidbSqlQuery *) nil_chk([self query])) whereWithComYahooSquidbSqlCriterion:[((ComYahooSquidbSqlProperty *) nil_chk(idProperty_)) eqWithId:JavaLangLong_valueOfWithLong_(id_)]];
  ComYahooSquidbDataSquidCursor *cursor = [((SGDBAppDatabase *) nil_chk(database_)) queryWithIOSClass:clazz_ withComYahooSquidbSqlQuery:query];
  if ([((ComYahooSquidbDataSquidCursor *) nil_chk(cursor)) moveToFirst]) {
    ComYahooSquidbDataTableModel *entity = [((IOSClass *) nil_chk(clazz_)) newInstance];
    [((ComYahooSquidbDataTableModel *) nil_chk(entity)) readPropertiesFromCursorWithComYahooSquidbDataSquidCursor:cursor];
    return entity;
  }
  return nil;
}

- (id<JavaUtilList>)findAll {
  ComYahooSquidbSqlQuery *query = [self query];
  ComYahooSquidbDataSquidCursor *cursor = [((SGDBAppDatabase *) nil_chk(database_)) queryWithIOSClass:clazz_ withComYahooSquidbSqlQuery:query];
  id<JavaUtilList> results = new_JavaUtilLinkedList_init();
  if ([((ComYahooSquidbDataSquidCursor *) nil_chk(cursor)) moveToFirst]) {
    ComYahooSquidbDataTableModel *entity = [((IOSClass *) nil_chk(clazz_)) newInstance];
    [((ComYahooSquidbDataTableModel *) nil_chk(entity)) readPropertiesFromCursorWithComYahooSquidbDataSquidCursor:cursor];
    [results addWithId:entity];
  }
  return results;
}

- (ComYahooSquidbSqlQuery *)query {
  return [((ComYahooSquidbSqlQuery *) nil_chk(ComYahooSquidbSqlQuery_selectWithComYahooSquidbSqlFieldArray_(self->properties_))) fromWithComYahooSquidbSqlSqlTable:table_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "Z", 0x1, 5, 3, -1, 6, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComYahooSquidbDataTableModel;", 0x1, 7, 8, 9, 10, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, 9, 11, -1, -1 },
    { NULL, "LComYahooSquidbSqlQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withComYahooSquidbSqlTable:withComYahooSquidbSqlPropertyArray:withComYahooSquidbSqlProperty:);
  methods[1].selector = @selector(saveWithComYahooSquidbDataTableModel:);
  methods[2].selector = @selector(delete__WithComYahooSquidbDataTableModel:);
  methods[3].selector = @selector(deleteAll);
  methods[4].selector = @selector(findByIdWithLong:);
  methods[5].selector = @selector(findAll);
  methods[6].selector = @selector(query);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "clazz_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, 12, -1 },
    { "properties_", "[LComYahooSquidbSqlProperty;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "table_", "LComYahooSquidbSqlTable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "idProperty_", "LComYahooSquidbSqlProperty;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "database_", "LSGDBAppDatabase;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;LComYahooSquidbSqlTable;[LComYahooSquidbSqlProperty;LComYahooSquidbSqlProperty;", "(Ljava/lang/Class<TT;>;Lcom/yahoo/squidb/sql/Table;[Lcom/yahoo/squidb/sql/Property;Lcom/yahoo/squidb/sql/Property;)V", "save", "LComYahooSquidbDataTableModel;", "(TT;)V", "delete", "(TT;)Z", "findById", "J", "LJavaLangIllegalAccessException;LJavaLangInstantiationException;", "(J)TT;", "()Ljava/util/List<TT;>;", "Ljava/lang/Class<TT;>;", "<T:Lcom/yahoo/squidb/data/TableModel;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _AppBaseRepository = { "BaseRepository", "br.com.mobilemind.app.repository", ptrTable, methods, fields, 7, 0x1, 7, 5, -1, -1, -1, 13, -1 };
  return &_AppBaseRepository;
}

@end

void AppBaseRepository_initWithIOSClass_withComYahooSquidbSqlTable_withComYahooSquidbSqlPropertyArray_withComYahooSquidbSqlProperty_(AppBaseRepository *self, IOSClass *clazz, ComYahooSquidbSqlTable *table, IOSObjectArray *properties, ComYahooSquidbSqlProperty *idProperty) {
  NSObject_init(self);
  self->database_ = SGDBAppDatabase_getInstance();
  self->clazz_ = clazz;
  self->properties_ = properties;
  self->table_ = table;
  self->idProperty_ = idProperty;
}

AppBaseRepository *new_AppBaseRepository_initWithIOSClass_withComYahooSquidbSqlTable_withComYahooSquidbSqlPropertyArray_withComYahooSquidbSqlProperty_(IOSClass *clazz, ComYahooSquidbSqlTable *table, IOSObjectArray *properties, ComYahooSquidbSqlProperty *idProperty) {
  J2OBJC_NEW_IMPL(AppBaseRepository, initWithIOSClass_withComYahooSquidbSqlTable_withComYahooSquidbSqlPropertyArray_withComYahooSquidbSqlProperty_, clazz, table, properties, idProperty)
}

AppBaseRepository *create_AppBaseRepository_initWithIOSClass_withComYahooSquidbSqlTable_withComYahooSquidbSqlPropertyArray_withComYahooSquidbSqlProperty_(IOSClass *clazz, ComYahooSquidbSqlTable *table, IOSObjectArray *properties, ComYahooSquidbSqlProperty *idProperty) {
  J2OBJC_CREATE_IMPL(AppBaseRepository, initWithIOSClass_withComYahooSquidbSqlTable_withComYahooSquidbSqlPropertyArray_withComYahooSquidbSqlProperty_, clazz, table, properties, idProperty)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AppBaseRepository)

J2OBJC_NAME_MAPPING(AppBaseRepository, "br.com.mobilemind.app.repository", "App")
