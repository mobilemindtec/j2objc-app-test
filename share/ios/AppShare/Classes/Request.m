//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/Request.java
//

#include "Gson.h"
#include "GsonBuilder.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "JsonArray.h"
#include "JsonObject.h"
#include "Request.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/net/URLEncoder.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "javax/annotation/Nonnull.h"
#include "javax/annotation/meta/When.h"

@interface BrComMobilemindJ2objcHttpRequest () {
 @public
  NSString *url_;
  id<JavaUtilMap> headers_;
  id body_;
}

- (jboolean)bodyIsMap;

- (jboolean)bodyIsJsonObject;

- (jboolean)bodyIsJsonArray;

- (jboolean)bodyIsString;

- (NSString *)mapToFormWithJavaUtilMap:(id<JavaUtilMap>)params;

- (NSString *)jsonToFormWithGsonJsonObject:(GsonJsonObject *)json;

@end

J2OBJC_FIELD_SETTER(BrComMobilemindJ2objcHttpRequest, url_, NSString *)
J2OBJC_FIELD_SETTER(BrComMobilemindJ2objcHttpRequest, headers_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(BrComMobilemindJ2objcHttpRequest, body_, id)

__attribute__((unused)) static jboolean BrComMobilemindJ2objcHttpRequest_bodyIsMap(BrComMobilemindJ2objcHttpRequest *self);

__attribute__((unused)) static jboolean BrComMobilemindJ2objcHttpRequest_bodyIsJsonObject(BrComMobilemindJ2objcHttpRequest *self);

__attribute__((unused)) static jboolean BrComMobilemindJ2objcHttpRequest_bodyIsJsonArray(BrComMobilemindJ2objcHttpRequest *self);

__attribute__((unused)) static jboolean BrComMobilemindJ2objcHttpRequest_bodyIsString(BrComMobilemindJ2objcHttpRequest *self);

__attribute__((unused)) static NSString *BrComMobilemindJ2objcHttpRequest_mapToFormWithJavaUtilMap_(BrComMobilemindJ2objcHttpRequest *self, id<JavaUtilMap> params);

__attribute__((unused)) static NSString *BrComMobilemindJ2objcHttpRequest_jsonToFormWithGsonJsonObject_(BrComMobilemindJ2objcHttpRequest *self, GsonJsonObject *json);

__attribute__((unused)) static IOSObjectArray *BrComMobilemindJ2objcHttpRequest__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *BrComMobilemindJ2objcHttpRequest__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *BrComMobilemindJ2objcHttpRequest__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *BrComMobilemindJ2objcHttpRequest__Annotations$3(void);

NSString *BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_HEADER = @"Content-Type";
NSString *BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_JSON = @"application/json";
NSString *BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_FORM = @"application/x-www-form-urlencoded";
NSString *BrComMobilemindJ2objcHttpRequest_ACCEPT_HEADER = @"Accept";
NSString *BrComMobilemindJ2objcHttpRequest_ACCEPT = @"application/json";

@implementation BrComMobilemindJ2objcHttpRequest

+ (NSString *)CONTENT_TYPE_HEADER {
  return BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_HEADER;
}

+ (NSString *)CONTENT_TYPE_JSON {
  return BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_JSON;
}

+ (NSString *)CONTENT_TYPE_FORM {
  return BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_FORM;
}

+ (NSString *)ACCEPT_HEADER {
  return BrComMobilemindJ2objcHttpRequest_ACCEPT_HEADER;
}

+ (NSString *)ACCEPT {
  return BrComMobilemindJ2objcHttpRequest_ACCEPT;
}

- (instancetype)initWithNSString:(NSString *)url
                          withId:(id)body
                 withJavaUtilMap:(id<JavaUtilMap>)headers {
  BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_withJavaUtilMap_(self, url, body, headers);
  return self;
}

- (instancetype)initWithNSString:(NSString *)url
                          withId:(id)body {
  BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_(self, url, body);
  return self;
}

- (instancetype)initWithNSString:(NSString *)url {
  BrComMobilemindJ2objcHttpRequest_initWithNSString_(self, url);
  return self;
}

- (instancetype)initWithNSString:(NSString *)url
                 withJavaUtilMap:(id<JavaUtilMap>)headers {
  BrComMobilemindJ2objcHttpRequest_initWithNSString_withJavaUtilMap_(self, url, headers);
  return self;
}

- (id<JavaUtilMap>)getHeaders {
  return headers_;
}

- (id)getBody {
  if (BrComMobilemindJ2objcHttpRequest_bodyIsMap(self)) {
    if ([self isFormContentType]) return BrComMobilemindJ2objcHttpRequest_mapToFormWithJavaUtilMap_(self, (id<JavaUtilMap>) cast_check(body_, JavaUtilMap_class_()));
    if ([self isJsonContentType]) return [((GsonGson *) nil_chk([new_GsonGsonBuilder_init() create])) toJsonWithId:body_];
  }
  if (!BrComMobilemindJ2objcHttpRequest_bodyIsString(self) && !BrComMobilemindJ2objcHttpRequest_bodyIsJsonObject(self) && !BrComMobilemindJ2objcHttpRequest_bodyIsJsonArray(self)) {
    if ([self isJsonContentType]) return [((GsonGson *) nil_chk([new_GsonGsonBuilder_init() create])) toJsonWithId:body_];
  }
  if (BrComMobilemindJ2objcHttpRequest_bodyIsJsonObject(self)) {
    if ([self isFormContentType]) return BrComMobilemindJ2objcHttpRequest_jsonToFormWithGsonJsonObject_(self, (GsonJsonObject *) cast_chk(body_, [GsonJsonObject class]));
  }
  return body_;
}

- (NSString *)getUrl {
  return url_;
}

- (NSString *)getContentType {
  if ([((id<JavaUtilMap>) nil_chk(headers_)) containsKeyWithId:BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_HEADER]) return [headers_ getWithId:BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_HEADER];
  return @"";
}

- (jboolean)isFormContentType {
  return [self getContentType] == BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_FORM;
}

- (jboolean)isJsonContentType {
  return [self getContentType] == BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_JSON;
}

- (jboolean)bodyIsMap {
  return BrComMobilemindJ2objcHttpRequest_bodyIsMap(self);
}

- (jboolean)bodyIsJsonObject {
  return BrComMobilemindJ2objcHttpRequest_bodyIsJsonObject(self);
}

- (jboolean)bodyIsJsonArray {
  return BrComMobilemindJ2objcHttpRequest_bodyIsJsonArray(self);
}

- (jboolean)bodyIsString {
  return BrComMobilemindJ2objcHttpRequest_bodyIsString(self);
}

- (NSString *)mapToFormWithJavaUtilMap:(id<JavaUtilMap>)params {
  return BrComMobilemindJ2objcHttpRequest_mapToFormWithJavaUtilMap_(self, params);
}

- (NSString *)jsonToFormWithGsonJsonObject:(GsonJsonObject *)json {
  return BrComMobilemindJ2objcHttpRequest_jsonToFormWithGsonJsonObject_(self, json);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, 2 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, 4 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, 6 },
    { NULL, NULL, 0x1, -1, 7, -1, 8, -1, 9 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 10, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 11, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 12, 13, 11, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 14, 15, 11, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withId:withJavaUtilMap:);
  methods[1].selector = @selector(initWithNSString:withId:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(initWithNSString:withJavaUtilMap:);
  methods[4].selector = @selector(getHeaders);
  methods[5].selector = @selector(getBody);
  methods[6].selector = @selector(getUrl);
  methods[7].selector = @selector(getContentType);
  methods[8].selector = @selector(isFormContentType);
  methods[9].selector = @selector(isJsonContentType);
  methods[10].selector = @selector(bodyIsMap);
  methods[11].selector = @selector(bodyIsJsonObject);
  methods[12].selector = @selector(bodyIsJsonArray);
  methods[13].selector = @selector(bodyIsString);
  methods[14].selector = @selector(mapToFormWithJavaUtilMap:);
  methods[15].selector = @selector(jsonToFormWithGsonJsonObject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CONTENT_TYPE_HEADER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "CONTENT_TYPE_JSON", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "CONTENT_TYPE_FORM", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "ACCEPT_HEADER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "ACCEPT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "url_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "headers_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 21, -1 },
    { "body_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSObject;LJavaUtilMap;", "(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", (void *)&BrComMobilemindJ2objcHttpRequest__Annotations$0, "LNSString;LNSObject;", (void *)&BrComMobilemindJ2objcHttpRequest__Annotations$1, "LNSString;", (void *)&BrComMobilemindJ2objcHttpRequest__Annotations$2, "LNSString;LJavaUtilMap;", "(Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", (void *)&BrComMobilemindJ2objcHttpRequest__Annotations$3, "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "LJavaIoUnsupportedEncodingException;", "mapToForm", "LJavaUtilMap;", "jsonToForm", "LGsonJsonObject;", &BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_HEADER, &BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_JSON, &BrComMobilemindJ2objcHttpRequest_CONTENT_TYPE_FORM, &BrComMobilemindJ2objcHttpRequest_ACCEPT_HEADER, &BrComMobilemindJ2objcHttpRequest_ACCEPT, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _BrComMobilemindJ2objcHttpRequest = { "Request", "br.com.mobilemind.j2objc.http", ptrTable, methods, fields, 7, 0x1, 16, 8, -1, -1, -1, -1, -1 };
  return &_BrComMobilemindJ2objcHttpRequest;
}

@end

void BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_withJavaUtilMap_(BrComMobilemindJ2objcHttpRequest *self, NSString *url, id body, id<JavaUtilMap> headers) {
  NSObject_init(self);
  self->url_ = url;
  self->body_ = body;
  self->headers_ = headers;
}

BrComMobilemindJ2objcHttpRequest *new_BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_withJavaUtilMap_(NSString *url, id body, id<JavaUtilMap> headers) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpRequest, initWithNSString_withId_withJavaUtilMap_, url, body, headers)
}

BrComMobilemindJ2objcHttpRequest *create_BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_withJavaUtilMap_(NSString *url, id body, id<JavaUtilMap> headers) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpRequest, initWithNSString_withId_withJavaUtilMap_, url, body, headers)
}

void BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_(BrComMobilemindJ2objcHttpRequest *self, NSString *url, id body) {
  BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_withJavaUtilMap_(self, url, body, new_JavaUtilHashMap_init());
}

BrComMobilemindJ2objcHttpRequest *new_BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_(NSString *url, id body) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpRequest, initWithNSString_withId_, url, body)
}

BrComMobilemindJ2objcHttpRequest *create_BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_(NSString *url, id body) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpRequest, initWithNSString_withId_, url, body)
}

void BrComMobilemindJ2objcHttpRequest_initWithNSString_(BrComMobilemindJ2objcHttpRequest *self, NSString *url) {
  BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_withJavaUtilMap_(self, url, nil, new_JavaUtilHashMap_init());
}

BrComMobilemindJ2objcHttpRequest *new_BrComMobilemindJ2objcHttpRequest_initWithNSString_(NSString *url) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpRequest, initWithNSString_, url)
}

BrComMobilemindJ2objcHttpRequest *create_BrComMobilemindJ2objcHttpRequest_initWithNSString_(NSString *url) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpRequest, initWithNSString_, url)
}

void BrComMobilemindJ2objcHttpRequest_initWithNSString_withJavaUtilMap_(BrComMobilemindJ2objcHttpRequest *self, NSString *url, id<JavaUtilMap> headers) {
  BrComMobilemindJ2objcHttpRequest_initWithNSString_withId_withJavaUtilMap_(self, url, nil, headers);
}

BrComMobilemindJ2objcHttpRequest *new_BrComMobilemindJ2objcHttpRequest_initWithNSString_withJavaUtilMap_(NSString *url, id<JavaUtilMap> headers) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpRequest, initWithNSString_withJavaUtilMap_, url, headers)
}

BrComMobilemindJ2objcHttpRequest *create_BrComMobilemindJ2objcHttpRequest_initWithNSString_withJavaUtilMap_(NSString *url, id<JavaUtilMap> headers) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpRequest, initWithNSString_withJavaUtilMap_, url, headers)
}

jboolean BrComMobilemindJ2objcHttpRequest_bodyIsMap(BrComMobilemindJ2objcHttpRequest *self) {
  return [JavaUtilMap_class_() isInstance:self->body_];
}

jboolean BrComMobilemindJ2objcHttpRequest_bodyIsJsonObject(BrComMobilemindJ2objcHttpRequest *self) {
  return [self->body_ isKindOfClass:[GsonJsonObject class]];
}

jboolean BrComMobilemindJ2objcHttpRequest_bodyIsJsonArray(BrComMobilemindJ2objcHttpRequest *self) {
  return [self->body_ isKindOfClass:[GsonJsonArray class]];
}

jboolean BrComMobilemindJ2objcHttpRequest_bodyIsString(BrComMobilemindJ2objcHttpRequest *self) {
  return [self->body_ isKindOfClass:[NSString class]];
}

NSString *BrComMobilemindJ2objcHttpRequest_mapToFormWithJavaUtilMap_(BrComMobilemindJ2objcHttpRequest *self, id<JavaUtilMap> params) {
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_init();
  jboolean first = true;
  for (id __strong key in nil_chk([((id<JavaUtilMap>) nil_chk(params)) keySet])) {
    id value = [params getWithId:key];
    if (first) first = false;
    else (void) [result appendWithNSString:@"&"];
    (void) [result appendWithNSString:JavaNetURLEncoder_encodeWithNSString_withNSString_([nil_chk(key) description], @"UTF-8")];
    (void) [result appendWithNSString:@"="];
    (void) [result appendWithNSString:JavaNetURLEncoder_encodeWithNSString_withNSString_([nil_chk(value) description], @"UTF-8")];
  }
  return [result description];
}

NSString *BrComMobilemindJ2objcHttpRequest_jsonToFormWithGsonJsonObject_(BrComMobilemindJ2objcHttpRequest *self, GsonJsonObject *json) {
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_init();
  jboolean first = true;
  for (NSString * __strong key in nil_chk([((GsonJsonObject *) nil_chk(json)) keySet])) {
    GsonJsonObject *jsonValue = [json getAsJsonObjectWithNSString:key];
    id value = @"";
    if ([((GsonJsonObject *) nil_chk(jsonValue)) isJsonPrimitive]) {
      value = [jsonValue description];
    }
    else if ([jsonValue isJsonObject]) {
      value = BrComMobilemindJ2objcHttpRequest_jsonToFormWithGsonJsonObject_(self, jsonValue);
    }
    if (first) first = false;
    else (void) [result appendWithNSString:@"&"];
    (void) [result appendWithNSString:JavaNetURLEncoder_encodeWithNSString_withNSString_(key, @"UTF-8")];
    (void) [result appendWithNSString:@"="];
    (void) [result appendWithNSString:JavaNetURLEncoder_encodeWithNSString_withNSString_([nil_chk(value) description], @"UTF-8")];
  }
  return [result description];
}

IOSObjectArray *BrComMobilemindJ2objcHttpRequest__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:3 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *BrComMobilemindJ2objcHttpRequest__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *BrComMobilemindJ2objcHttpRequest__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *BrComMobilemindJ2objcHttpRequest__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaxAnnotationNonnull(JreLoadEnum(JavaxAnnotationMetaWhen, ALWAYS)) } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(BrComMobilemindJ2objcHttpRequest)
