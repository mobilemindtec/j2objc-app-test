//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/RestResult.java
//

#ifndef RestResult_H
#define RestResult_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaLangThrowable;
@protocol JavaUtilList;

@interface AppBaseRestResult : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithBoolean:(jboolean)error
                             withNSString:(NSString *)message;

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)results;

- (instancetype __nonnull)initWithNSString:(NSString *)message;

- (instancetype __nonnull)initWithId:(id)result;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)ex;

- (jlong)getCurrentUnixTime;

- (id<JavaUtilList>)getErrors;

- (NSString *)getMessage;

- (id)getResult;

- (id<JavaUtilList>)getResults;

- (jint)getTotalCount;

- (jboolean)isError;

- (jboolean)isSuccess;

- (void)setCurrentUnixTimeWithLong:(jlong)currentUnixTime;

- (void)setErrorWithBoolean:(jboolean)error;

- (void)setErrorsWithJavaUtilList:(id<JavaUtilList>)errors;

- (void)setMessageWithNSString:(NSString *)message;

- (void)setResultWithId:(id)result;

- (void)setResultsWithJavaUtilList:(id<JavaUtilList>)results;

- (void)setTotalCountWithInt:(jint)totalCount;

@end

J2OBJC_EMPTY_STATIC_INIT(AppBaseRestResult)

FOUNDATION_EXPORT void AppBaseRestResult_init(AppBaseRestResult *self);

FOUNDATION_EXPORT AppBaseRestResult *new_AppBaseRestResult_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResult *create_AppBaseRestResult_init(void);

FOUNDATION_EXPORT void AppBaseRestResult_initWithBoolean_withNSString_(AppBaseRestResult *self, jboolean error, NSString *message);

FOUNDATION_EXPORT AppBaseRestResult *new_AppBaseRestResult_initWithBoolean_withNSString_(jboolean error, NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResult *create_AppBaseRestResult_initWithBoolean_withNSString_(jboolean error, NSString *message);

FOUNDATION_EXPORT void AppBaseRestResult_initWithJavaLangThrowable_(AppBaseRestResult *self, JavaLangThrowable *ex);

FOUNDATION_EXPORT AppBaseRestResult *new_AppBaseRestResult_initWithJavaLangThrowable_(JavaLangThrowable *ex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResult *create_AppBaseRestResult_initWithJavaLangThrowable_(JavaLangThrowable *ex);

FOUNDATION_EXPORT void AppBaseRestResult_initWithNSString_(AppBaseRestResult *self, NSString *message);

FOUNDATION_EXPORT AppBaseRestResult *new_AppBaseRestResult_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResult *create_AppBaseRestResult_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void AppBaseRestResult_initWithId_(AppBaseRestResult *self, id result);

FOUNDATION_EXPORT AppBaseRestResult *new_AppBaseRestResult_initWithId_(id result) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResult *create_AppBaseRestResult_initWithId_(id result);

FOUNDATION_EXPORT void AppBaseRestResult_initWithJavaUtilList_(AppBaseRestResult *self, id<JavaUtilList> results);

FOUNDATION_EXPORT AppBaseRestResult *new_AppBaseRestResult_initWithJavaUtilList_(id<JavaUtilList> results) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResult *create_AppBaseRestResult_initWithJavaUtilList_(id<JavaUtilList> results);

J2OBJC_TYPE_LITERAL_HEADER(AppBaseRestResult)

@compatibility_alias BrComMobilemindJ2objcRestRestResult AppBaseRestResult;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RestResult_H
