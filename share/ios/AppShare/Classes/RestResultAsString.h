//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/RestResultAsString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RestResultAsString")
#ifdef RESTRICT_RestResultAsString
#define INCLUDE_ALL_RestResultAsString 0
#else
#define INCLUDE_ALL_RestResultAsString 1
#endif
#undef RESTRICT_RestResultAsString

#if !defined (AppBaseRestResultAsString_) && (INCLUDE_ALL_RestResultAsString || defined(INCLUDE_AppBaseRestResultAsString))
#define AppBaseRestResultAsString_

@protocol JavaUtilList;

@interface AppBaseRestResultAsString : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithBoolean:(jboolean)error
                   withNSString:(NSString *)message;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)results;

- (instancetype)initWithNSString:(NSString *)message
                    withNSString:(NSString *)result;

- (NSString *)getMessage;

- (NSString *)getResult;

- (id<JavaUtilList>)getResults;

- (jboolean)isError;

- (jboolean)isSuccess;

- (void)setErrorWithBoolean:(jboolean)error;

- (void)setMessageWithNSString:(NSString *)message;

- (void)setResultWithNSString:(NSString *)result;

- (void)setResultsWithJavaUtilList:(id<JavaUtilList>)results;

@end

J2OBJC_EMPTY_STATIC_INIT(AppBaseRestResultAsString)

FOUNDATION_EXPORT void AppBaseRestResultAsString_init(AppBaseRestResultAsString *self);

FOUNDATION_EXPORT AppBaseRestResultAsString *new_AppBaseRestResultAsString_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResultAsString *create_AppBaseRestResultAsString_init(void);

FOUNDATION_EXPORT void AppBaseRestResultAsString_initWithBoolean_withNSString_(AppBaseRestResultAsString *self, jboolean error, NSString *message);

FOUNDATION_EXPORT AppBaseRestResultAsString *new_AppBaseRestResultAsString_initWithBoolean_withNSString_(jboolean error, NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResultAsString *create_AppBaseRestResultAsString_initWithBoolean_withNSString_(jboolean error, NSString *message);

FOUNDATION_EXPORT void AppBaseRestResultAsString_initWithNSString_withNSString_(AppBaseRestResultAsString *self, NSString *message, NSString *result);

FOUNDATION_EXPORT AppBaseRestResultAsString *new_AppBaseRestResultAsString_initWithNSString_withNSString_(NSString *message, NSString *result) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResultAsString *create_AppBaseRestResultAsString_initWithNSString_withNSString_(NSString *message, NSString *result);

FOUNDATION_EXPORT void AppBaseRestResultAsString_initWithJavaUtilList_(AppBaseRestResultAsString *self, id<JavaUtilList> results);

FOUNDATION_EXPORT AppBaseRestResultAsString *new_AppBaseRestResultAsString_initWithJavaUtilList_(id<JavaUtilList> results) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestResultAsString *create_AppBaseRestResultAsString_initWithJavaUtilList_(id<JavaUtilList> results);

J2OBJC_TYPE_LITERAL_HEADER(AppBaseRestResultAsString)

@compatibility_alias BrComMobilemindJ2objcRestRestResultAsString AppBaseRestResultAsString;

#endif

#pragma pop_macro("INCLUDE_ALL_RestResultAsString")
