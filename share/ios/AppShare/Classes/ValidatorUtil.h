//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/ValidatorUtil.java
//

#ifndef ValidatorUtil_H
#define ValidatorUtil_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@interface AppBaseValidatorUtil : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (jboolean)isValidCNPJWithNSString:(NSString *)cnpj;

+ (jboolean)isValidCPFWithNSString:(NSString *)cpf;

+ (jboolean)isValidEmailWithNSString:(NSString *)email;

@end

J2OBJC_STATIC_INIT(AppBaseValidatorUtil)

FOUNDATION_EXPORT void AppBaseValidatorUtil_init(AppBaseValidatorUtil *self);

FOUNDATION_EXPORT AppBaseValidatorUtil *new_AppBaseValidatorUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseValidatorUtil *create_AppBaseValidatorUtil_init(void);

FOUNDATION_EXPORT jboolean AppBaseValidatorUtil_isValidCPFWithNSString_(NSString *cpf);

FOUNDATION_EXPORT jboolean AppBaseValidatorUtil_isValidCNPJWithNSString_(NSString *cnpj);

FOUNDATION_EXPORT jboolean AppBaseValidatorUtil_isValidEmailWithNSString_(NSString *email);

J2OBJC_TYPE_LITERAL_HEADER(AppBaseValidatorUtil)

@compatibility_alias BrComMobilemindJ2objcUtilValidatorUtil AppBaseValidatorUtil;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ValidatorUtil_H
