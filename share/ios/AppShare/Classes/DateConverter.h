//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/DateConverter.java
//

#ifndef DateConverter_H
#define DateConverter_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaUtilDate;
@class JavaUtilLoggingLogger;

@interface AppBaseDateConverter : NSObject
@property (readonly, class) JavaUtilLoggingLogger *logger NS_SWIFT_NAME(logger);

+ (JavaUtilLoggingLogger *)logger;

#pragma mark Public

- (instancetype __nonnull)init;

+ (NSString *)fromWithJavaUtilDate:(JavaUtilDate *)date;

+ (JavaUtilDate *)toWithNSString:(NSString *)date;

@end

J2OBJC_STATIC_INIT(AppBaseDateConverter)

inline JavaUtilLoggingLogger *AppBaseDateConverter_get_logger(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilLoggingLogger *AppBaseDateConverter_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AppBaseDateConverter, logger, JavaUtilLoggingLogger *)

FOUNDATION_EXPORT void AppBaseDateConverter_init(AppBaseDateConverter *self);

FOUNDATION_EXPORT AppBaseDateConverter *new_AppBaseDateConverter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseDateConverter *create_AppBaseDateConverter_init(void);

FOUNDATION_EXPORT NSString *AppBaseDateConverter_fromWithJavaUtilDate_(JavaUtilDate *date);

FOUNDATION_EXPORT JavaUtilDate *AppBaseDateConverter_toWithNSString_(NSString *date);

J2OBJC_TYPE_LITERAL_HEADER(AppBaseDateConverter)

@compatibility_alias BrComMobilemindJ2objcUtilDateConverter AppBaseDateConverter;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DateConverter_H
