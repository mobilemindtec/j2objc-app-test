//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/RestService.java
//

#ifndef RestService_H
#define RestService_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class JavaUtilLoggingLogger;

@interface AppBaseRestService : NSObject
@property (readonly, class) JavaUtilLoggingLogger *logger NS_SWIFT_NAME(logger);

+ (JavaUtilLoggingLogger *)logger;

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)baseUrl;

- (instancetype __nonnull)initWithNSString:(NSString *)baseUrl
                                   withInt:(jint)timeout;

- (AppBaseRestService *)actionWithNSString:(NSString *)a;

- (NSString *)deleteAsStringWithInt:(jint)id_;

- (NSString *)getAsString;

- (AppBaseRestService *)headerWithNSString:(NSString *)name
                              withNSString:(NSString *)value;

- (NSString *)postAsStringWithNSString:(NSString *)entity;

- (NSString *)putAsStringWithNSString:(NSString *)entity;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(AppBaseRestService)

inline JavaUtilLoggingLogger *AppBaseRestService_get_logger(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilLoggingLogger *AppBaseRestService_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AppBaseRestService, logger, JavaUtilLoggingLogger *)

FOUNDATION_EXPORT void AppBaseRestService_initWithNSString_(AppBaseRestService *self, NSString *baseUrl);

FOUNDATION_EXPORT AppBaseRestService *new_AppBaseRestService_initWithNSString_(NSString *baseUrl) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestService *create_AppBaseRestService_initWithNSString_(NSString *baseUrl);

FOUNDATION_EXPORT void AppBaseRestService_initWithNSString_withInt_(AppBaseRestService *self, NSString *baseUrl, jint timeout);

FOUNDATION_EXPORT AppBaseRestService *new_AppBaseRestService_initWithNSString_withInt_(NSString *baseUrl, jint timeout) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseRestService *create_AppBaseRestService_initWithNSString_withInt_(NSString *baseUrl, jint timeout);

J2OBJC_TYPE_LITERAL_HEADER(AppBaseRestService)

@compatibility_alias BrComMobilemindJ2objcRestRestService AppBaseRestService;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // RestService_H
