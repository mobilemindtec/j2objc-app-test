//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/HttpException.java
//

#include "HttpException.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"

@interface BrComMobilemindJ2objcHttpHttpException () {
 @public
  jint httpStatus_;
}

@end

@implementation BrComMobilemindJ2objcHttpHttpException

- (instancetype)initWithInt:(jint)httpStatus
               withNSString:(NSString *)message
      withJavaLangException:(JavaLangException *)e {
  BrComMobilemindJ2objcHttpHttpException_initWithInt_withNSString_withJavaLangException_(self, httpStatus, message, e);
  return self;
}

- (instancetype)initWithInt:(jint)httpStatus
      withJavaLangException:(JavaLangException *)e {
  BrComMobilemindJ2objcHttpHttpException_initWithInt_withJavaLangException_(self, httpStatus, e);
  return self;
}

- (instancetype)initWithInt:(jint)httpStatus
               withNSString:(NSString *)message {
  BrComMobilemindJ2objcHttpHttpException_initWithInt_withNSString_(self, httpStatus, message);
  return self;
}

- (instancetype)initWithInt:(jint)httpStatus {
  BrComMobilemindJ2objcHttpHttpException_initWithInt_(self, httpStatus);
  return self;
}

- (jint)getHttpSatatus {
  return httpStatus_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withNSString:withJavaLangException:);
  methods[1].selector = @selector(initWithInt:withJavaLangException:);
  methods[2].selector = @selector(initWithInt:withNSString:);
  methods[3].selector = @selector(initWithInt:);
  methods[4].selector = @selector(getHttpSatatus);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "httpStatus_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILNSString;LJavaLangException;", "ILJavaLangException;", "ILNSString;", "I" };
  static const J2ObjcClassInfo _BrComMobilemindJ2objcHttpHttpException = { "HttpException", "br.com.mobilemind.j2objc.http", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_BrComMobilemindJ2objcHttpHttpException;
}

@end

void BrComMobilemindJ2objcHttpHttpException_initWithInt_withNSString_withJavaLangException_(BrComMobilemindJ2objcHttpHttpException *self, jint httpStatus, NSString *message, JavaLangException *e) {
  JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(self, message, e);
  self->httpStatus_ = httpStatus;
}

BrComMobilemindJ2objcHttpHttpException *new_BrComMobilemindJ2objcHttpHttpException_initWithInt_withNSString_withJavaLangException_(jint httpStatus, NSString *message, JavaLangException *e) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpHttpException, initWithInt_withNSString_withJavaLangException_, httpStatus, message, e)
}

BrComMobilemindJ2objcHttpHttpException *create_BrComMobilemindJ2objcHttpHttpException_initWithInt_withNSString_withJavaLangException_(jint httpStatus, NSString *message, JavaLangException *e) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpHttpException, initWithInt_withNSString_withJavaLangException_, httpStatus, message, e)
}

void BrComMobilemindJ2objcHttpHttpException_initWithInt_withJavaLangException_(BrComMobilemindJ2objcHttpHttpException *self, jint httpStatus, JavaLangException *e) {
  JavaLangRuntimeException_initWithJavaLangThrowable_(self, e);
  self->httpStatus_ = httpStatus;
}

BrComMobilemindJ2objcHttpHttpException *new_BrComMobilemindJ2objcHttpHttpException_initWithInt_withJavaLangException_(jint httpStatus, JavaLangException *e) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpHttpException, initWithInt_withJavaLangException_, httpStatus, e)
}

BrComMobilemindJ2objcHttpHttpException *create_BrComMobilemindJ2objcHttpHttpException_initWithInt_withJavaLangException_(jint httpStatus, JavaLangException *e) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpHttpException, initWithInt_withJavaLangException_, httpStatus, e)
}

void BrComMobilemindJ2objcHttpHttpException_initWithInt_withNSString_(BrComMobilemindJ2objcHttpHttpException *self, jint httpStatus, NSString *message) {
  JavaLangRuntimeException_initWithNSString_(self, message);
  self->httpStatus_ = httpStatus;
}

BrComMobilemindJ2objcHttpHttpException *new_BrComMobilemindJ2objcHttpHttpException_initWithInt_withNSString_(jint httpStatus, NSString *message) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpHttpException, initWithInt_withNSString_, httpStatus, message)
}

BrComMobilemindJ2objcHttpHttpException *create_BrComMobilemindJ2objcHttpHttpException_initWithInt_withNSString_(jint httpStatus, NSString *message) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpHttpException, initWithInt_withNSString_, httpStatus, message)
}

void BrComMobilemindJ2objcHttpHttpException_initWithInt_(BrComMobilemindJ2objcHttpHttpException *self, jint httpStatus) {
  JavaLangRuntimeException_initWithNSString_(self, @"unknown exception");
  self->httpStatus_ = httpStatus;
}

BrComMobilemindJ2objcHttpHttpException *new_BrComMobilemindJ2objcHttpHttpException_initWithInt_(jint httpStatus) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpHttpException, initWithInt_, httpStatus)
}

BrComMobilemindJ2objcHttpHttpException *create_BrComMobilemindJ2objcHttpHttpException_initWithInt_(jint httpStatus) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpHttpException, initWithInt_, httpStatus)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(BrComMobilemindJ2objcHttpHttpException)
