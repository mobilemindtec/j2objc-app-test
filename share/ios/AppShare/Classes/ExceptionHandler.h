//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/ExceptionHandler.java
//

#ifndef ExceptionHandler_H
#define ExceptionHandler_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class BrComMobilemindJ2objcHttpResponse;
@class JavaLangException;
@class JavaLangThrowable;

@interface AppBaseExceptionHandler : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (JavaLangThrowable *)handleWithJavaLangException:(JavaLangException *)e;

+ (NSString *)handleWithBrComMobilemindJ2objcHttpResponse:(BrComMobilemindJ2objcHttpResponse *)response;

@end

J2OBJC_EMPTY_STATIC_INIT(AppBaseExceptionHandler)

FOUNDATION_EXPORT void AppBaseExceptionHandler_init(AppBaseExceptionHandler *self);

FOUNDATION_EXPORT AppBaseExceptionHandler *new_AppBaseExceptionHandler_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AppBaseExceptionHandler *create_AppBaseExceptionHandler_init(void);

FOUNDATION_EXPORT JavaLangThrowable *AppBaseExceptionHandler_handleWithJavaLangException_(JavaLangException *e);

FOUNDATION_EXPORT NSString *AppBaseExceptionHandler_handleWithBrComMobilemindJ2objcHttpResponse_(BrComMobilemindJ2objcHttpResponse *response);

J2OBJC_TYPE_LITERAL_HEADER(AppBaseExceptionHandler)

@compatibility_alias BrComMobilemindJ2objcUtilExceptionHandler AppBaseExceptionHandler;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ExceptionHandler_H
