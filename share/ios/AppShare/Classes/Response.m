//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/Response.java
//

#include "J2ObjC_source.h"
#include "Response.h"
#include "Transformer.h"
#include "java/io/InputStream.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface BrComMobilemindJ2objcHttpResponse () {
 @public
  jint httpStatus_;
  id<JavaUtilMap> headers_;
  JavaIoInputStream *entity_;
  JavaIoInputStream *error_;
  BrComMobilemindJ2objcHttpTransformer *transformer_;
}

@end

J2OBJC_FIELD_SETTER(BrComMobilemindJ2objcHttpResponse, headers_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(BrComMobilemindJ2objcHttpResponse, entity_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(BrComMobilemindJ2objcHttpResponse, error_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(BrComMobilemindJ2objcHttpResponse, transformer_, BrComMobilemindJ2objcHttpTransformer *)

@implementation BrComMobilemindJ2objcHttpResponse

+ (jint)HTTP_STATUS_OK {
  return BrComMobilemindJ2objcHttpResponse_HTTP_STATUS_OK;
}

- (instancetype)initWithInt:(jint)httpStatus {
  BrComMobilemindJ2objcHttpResponse_initWithInt_(self, httpStatus);
  return self;
}

- (instancetype)initWithInt:(jint)httpStatus
withBrComMobilemindJ2objcHttpTransformer:(BrComMobilemindJ2objcHttpTransformer *)transformer {
  BrComMobilemindJ2objcHttpResponse_initWithInt_withBrComMobilemindJ2objcHttpTransformer_(self, httpStatus, transformer);
  return self;
}

- (void)setTransformerWithBrComMobilemindJ2objcHttpTransformer:(BrComMobilemindJ2objcHttpTransformer *)transformer {
  self->transformer_ = transformer;
  [((BrComMobilemindJ2objcHttpTransformer *) nil_chk(self->transformer_)) setResponseWithBrComMobilemindJ2objcHttpResponse:self];
}

- (BrComMobilemindJ2objcHttpTransformer *)transformer {
  return transformer_;
}

- (jint)getHttpStatus {
  return httpStatus_;
}

- (id<JavaUtilMap>)getHeaders {
  return headers_;
}

- (JavaIoInputStream *)getEntity {
  return entity_;
}

- (void)setEntityWithJavaIoInputStream:(JavaIoInputStream *)entity {
  self->entity_ = entity;
}

- (JavaIoInputStream *)getError {
  return error_;
}

- (void)setErrorWithJavaIoInputStream:(JavaIoInputStream *)error {
  self->error_ = error;
}

- (jboolean)is200 {
  return self->httpStatus_ == BrComMobilemindJ2objcHttpResponse_HTTP_STATUS_OK;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LBrComMobilemindJ2objcHttpTransformer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithInt:withBrComMobilemindJ2objcHttpTransformer:);
  methods[2].selector = @selector(setTransformerWithBrComMobilemindJ2objcHttpTransformer:);
  methods[3].selector = @selector(transformer);
  methods[4].selector = @selector(getHttpStatus);
  methods[5].selector = @selector(getHeaders);
  methods[6].selector = @selector(getEntity);
  methods[7].selector = @selector(setEntityWithJavaIoInputStream:);
  methods[8].selector = @selector(getError);
  methods[9].selector = @selector(setErrorWithJavaIoInputStream:);
  methods[10].selector = @selector(is200);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HTTP_STATUS_OK", "I", .constantValue.asInt = BrComMobilemindJ2objcHttpResponse_HTTP_STATUS_OK, 0x19, -1, -1, -1, -1 },
    { "httpStatus_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "headers_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
    { "entity_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "error_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "transformer_", "LBrComMobilemindJ2objcHttpTransformer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "ILBrComMobilemindJ2objcHttpTransformer;", "setTransformer", "LBrComMobilemindJ2objcHttpTransformer;", "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "setEntity", "LJavaIoInputStream;", "setError", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _BrComMobilemindJ2objcHttpResponse = { "Response", "br.com.mobilemind.j2objc.http", ptrTable, methods, fields, 7, 0x1, 11, 6, -1, -1, -1, -1, -1 };
  return &_BrComMobilemindJ2objcHttpResponse;
}

@end

void BrComMobilemindJ2objcHttpResponse_initWithInt_(BrComMobilemindJ2objcHttpResponse *self, jint httpStatus) {
  BrComMobilemindJ2objcHttpResponse_initWithInt_withBrComMobilemindJ2objcHttpTransformer_(self, httpStatus, new_BrComMobilemindJ2objcHttpTransformer_init());
}

BrComMobilemindJ2objcHttpResponse *new_BrComMobilemindJ2objcHttpResponse_initWithInt_(jint httpStatus) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpResponse, initWithInt_, httpStatus)
}

BrComMobilemindJ2objcHttpResponse *create_BrComMobilemindJ2objcHttpResponse_initWithInt_(jint httpStatus) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpResponse, initWithInt_, httpStatus)
}

void BrComMobilemindJ2objcHttpResponse_initWithInt_withBrComMobilemindJ2objcHttpTransformer_(BrComMobilemindJ2objcHttpResponse *self, jint httpStatus, BrComMobilemindJ2objcHttpTransformer *transformer) {
  NSObject_init(self);
  self->httpStatus_ = httpStatus;
  self->headers_ = new_JavaUtilHashMap_init();
  [self setTransformerWithBrComMobilemindJ2objcHttpTransformer:transformer];
}

BrComMobilemindJ2objcHttpResponse *new_BrComMobilemindJ2objcHttpResponse_initWithInt_withBrComMobilemindJ2objcHttpTransformer_(jint httpStatus, BrComMobilemindJ2objcHttpTransformer *transformer) {
  J2OBJC_NEW_IMPL(BrComMobilemindJ2objcHttpResponse, initWithInt_withBrComMobilemindJ2objcHttpTransformer_, httpStatus, transformer)
}

BrComMobilemindJ2objcHttpResponse *create_BrComMobilemindJ2objcHttpResponse_initWithInt_withBrComMobilemindJ2objcHttpTransformer_(jint httpStatus, BrComMobilemindJ2objcHttpTransformer *transformer) {
  J2OBJC_CREATE_IMPL(BrComMobilemindJ2objcHttpResponse, initWithInt_withBrComMobilemindJ2objcHttpTransformer_, httpStatus, transformer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(BrComMobilemindJ2objcHttpResponse)
