//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/RestException.java
//

#include "J2ObjC_source.h"
#include "RestException.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"

@interface AppBaseRestException () {
 @public
  jint httpSatatus_;
}

@end

@implementation AppBaseRestException

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangException:(JavaLangException *)e {
  AppBaseRestException_initWithNSString_withJavaLangException_(self, message, e);
  return self;
}

- (instancetype)initWithJavaLangException:(JavaLangException *)e {
  AppBaseRestException_initWithJavaLangException_(self, e);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message {
  AppBaseRestException_initWithNSString_(self, message);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AppBaseRestException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)httpStatus
               withNSString:(NSString *)message {
  AppBaseRestException_initWithInt_withNSString_(self, httpStatus, message);
  return self;
}

- (instancetype)initWithInt:(jint)httpStatus {
  AppBaseRestException_initWithInt_(self, httpStatus);
  return self;
}

- (jint)getHttpSatatus {
  return httpSatatus_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withJavaLangException:);
  methods[1].selector = @selector(initWithJavaLangException:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(init);
  methods[4].selector = @selector(initWithInt:withNSString:);
  methods[5].selector = @selector(initWithInt:);
  methods[6].selector = @selector(getHttpSatatus);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "httpSatatus_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangException;", "LJavaLangException;", "LNSString;", "ILNSString;", "I" };
  static const J2ObjcClassInfo _AppBaseRestException = { "RestException", "br.com.mobilemind.j2objc.rest", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_AppBaseRestException;
}

@end

void AppBaseRestException_initWithNSString_withJavaLangException_(AppBaseRestException *self, NSString *message, JavaLangException *e) {
  JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(self, message, e);
  self->httpSatatus_ = -1;
}

AppBaseRestException *new_AppBaseRestException_initWithNSString_withJavaLangException_(NSString *message, JavaLangException *e) {
  J2OBJC_NEW_IMPL(AppBaseRestException, initWithNSString_withJavaLangException_, message, e)
}

AppBaseRestException *create_AppBaseRestException_initWithNSString_withJavaLangException_(NSString *message, JavaLangException *e) {
  J2OBJC_CREATE_IMPL(AppBaseRestException, initWithNSString_withJavaLangException_, message, e)
}

void AppBaseRestException_initWithJavaLangException_(AppBaseRestException *self, JavaLangException *e) {
  JavaLangRuntimeException_initWithJavaLangThrowable_(self, e);
  self->httpSatatus_ = -1;
}

AppBaseRestException *new_AppBaseRestException_initWithJavaLangException_(JavaLangException *e) {
  J2OBJC_NEW_IMPL(AppBaseRestException, initWithJavaLangException_, e)
}

AppBaseRestException *create_AppBaseRestException_initWithJavaLangException_(JavaLangException *e) {
  J2OBJC_CREATE_IMPL(AppBaseRestException, initWithJavaLangException_, e)
}

void AppBaseRestException_initWithNSString_(AppBaseRestException *self, NSString *message) {
  JavaLangRuntimeException_initWithNSString_(self, message);
  self->httpSatatus_ = -1;
}

AppBaseRestException *new_AppBaseRestException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(AppBaseRestException, initWithNSString_, message)
}

AppBaseRestException *create_AppBaseRestException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(AppBaseRestException, initWithNSString_, message)
}

void AppBaseRestException_init(AppBaseRestException *self) {
  JavaLangRuntimeException_initWithNSString_(self, @"unknown exception");
  self->httpSatatus_ = -1;
}

AppBaseRestException *new_AppBaseRestException_init() {
  J2OBJC_NEW_IMPL(AppBaseRestException, init)
}

AppBaseRestException *create_AppBaseRestException_init() {
  J2OBJC_CREATE_IMPL(AppBaseRestException, init)
}

void AppBaseRestException_initWithInt_withNSString_(AppBaseRestException *self, jint httpStatus, NSString *message) {
  JavaLangRuntimeException_initWithNSString_(self, message);
  self->httpSatatus_ = -1;
  self->httpSatatus_ = httpStatus;
}

AppBaseRestException *new_AppBaseRestException_initWithInt_withNSString_(jint httpStatus, NSString *message) {
  J2OBJC_NEW_IMPL(AppBaseRestException, initWithInt_withNSString_, httpStatus, message)
}

AppBaseRestException *create_AppBaseRestException_initWithInt_withNSString_(jint httpStatus, NSString *message) {
  J2OBJC_CREATE_IMPL(AppBaseRestException, initWithInt_withNSString_, httpStatus, message)
}

void AppBaseRestException_initWithInt_(AppBaseRestException *self, jint httpStatus) {
  JavaLangRuntimeException_init(self);
  self->httpSatatus_ = -1;
  self->httpSatatus_ = httpStatus;
}

AppBaseRestException *new_AppBaseRestException_initWithInt_(jint httpStatus) {
  J2OBJC_NEW_IMPL(AppBaseRestException, initWithInt_, httpStatus)
}

AppBaseRestException *create_AppBaseRestException_initWithInt_(jint httpStatus) {
  J2OBJC_CREATE_IMPL(AppBaseRestException, initWithInt_, httpStatus)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AppBaseRestException)
