//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/RestResult.java
//

#include "J2ObjC_source.h"
#include "RestResult.h"
#include "java/util/List.h"

@interface AppBaseRestResult () {
 @public
  jboolean error_;
  NSString *message_;
  id result_;
  id<JavaUtilList> results_;
}

@end

J2OBJC_FIELD_SETTER(AppBaseRestResult, message_, NSString *)
J2OBJC_FIELD_SETTER(AppBaseRestResult, result_, id)
J2OBJC_FIELD_SETTER(AppBaseRestResult, results_, id<JavaUtilList>)

@implementation AppBaseRestResult

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AppBaseRestResult_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isError {
  return error_;
}

- (void)setErrorWithBoolean:(jboolean)error {
  self->error_ = error;
}

- (NSString *)getMessage {
  return message_;
}

- (void)setMessageWithNSString:(NSString *)message {
  self->message_ = message;
}

- (id)getResult {
  return result_;
}

- (void)setResultWithId:(id)result {
  self->result_ = result;
}

- (id<JavaUtilList>)getResults {
  return results_;
}

- (void)setResultsWithJavaUtilList:(id<JavaUtilList>)results {
  self->results_ = results;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, 11, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isError);
  methods[2].selector = @selector(setErrorWithBoolean:);
  methods[3].selector = @selector(getMessage);
  methods[4].selector = @selector(setMessageWithNSString:);
  methods[5].selector = @selector(getResult);
  methods[6].selector = @selector(setResultWithId:);
  methods[7].selector = @selector(getResults);
  methods[8].selector = @selector(setResultsWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "error_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "message_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "result_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, 12, -1 },
    { "results_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 13, -1 },
  };
  static const void *ptrTable[] = { "setError", "Z", "setMessage", "LNSString;", "()TT;", "setResult", "LNSObject;", "(TT;)V", "()Ljava/util/List<TT;>;", "setResults", "LJavaUtilList;", "(Ljava/util/List<TT;>;)V", "TT;", "Ljava/util/List<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _AppBaseRestResult = { "RestResult", "br.com.mobilemind.j2objc.rest", ptrTable, methods, fields, 7, 0x1, 9, 4, -1, -1, -1, 14, -1 };
  return &_AppBaseRestResult;
}

@end

void AppBaseRestResult_init(AppBaseRestResult *self) {
  NSObject_init(self);
}

AppBaseRestResult *new_AppBaseRestResult_init() {
  J2OBJC_NEW_IMPL(AppBaseRestResult, init)
}

AppBaseRestResult *create_AppBaseRestResult_init() {
  J2OBJC_CREATE_IMPL(AppBaseRestResult, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AppBaseRestResult)
